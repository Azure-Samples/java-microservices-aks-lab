apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: visits-service
  name: visits-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: visits-service
  template:
    metadata:
      labels:
        app: visits-service
        azure.workload.identity/use: "true"
    spec:
      serviceAccountName: workload-identity-sa
      volumes:
      - name: secrets-store01-inline
        csi: 
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes: 
            secretProviderClass: "azure-kvname-user-msi"
      containers:
      - image: acrpetclinicair2.azurecr.io/spring-petclinic-visits-service:3.0.2
        name: visits-service
        env:
        - name: "CONFIG_SERVER_URL"
          valueFrom:
            configMapKeyRef:
              name: config-server
              key: CONFIG_SERVER_URL
        - name: "APPLICATIONINSIGHTS_CONNECTION_STRING"
          valueFrom:
            configMapKeyRef:
              name: config-server
              key: APPLICATIONINSIGHTS_CONNECTION_STRING
        - name: "APPLICATIONINSIGHTS_CONFIGURATION_CONTENT"
          value: >-
            {
                "role": {   
                    "name": "visits-service"
                  }
            }
        - name: SPRING_JMS_SERVICEBUS_CONNECTIONSTRING
          valueFrom:
            secretKeyRef:
              name: sbsecret
              key: sbconn
        volumeMounts:
        - name: secrets-store01-inline
          mountPath: "/mnt/secrets-store2"
          readOnly: true
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 180
          successThreshold: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          successThreshold: 1
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9779
          name: prometheus
          protocol: TCP
        - containerPort: 8778
          name: jolokia
          protocol: TCP
        securityContext:
          privileged: false
   
   
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: visits-service
  name: visits-service
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: visits-service
  type: ClusterIP
